name: windows-latest
run-name: ${{ github.workflow }} âœ… ${{ github.actor }} âœ… ${{ github.event_name}}
on:
  workflow_dispatch:

jobs:
  cmd:
    name: Shell cmd
    continue-on-error: false
    strategy:
      max-parallel: 3
      matrix:
       os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - id: foo
        uses: milankomaj/shell-x@v0.2
        with:
          who-to-greet: '${{ github.actor }}'
          neofetch: 'true'
          shell: 'cmd'
          locale: 'sk-SK'
          timezone: 'Central Europe Standard Time'

      - run: echo ðŸ’¡ ${{ steps.foo.outputs.random-number }}
        shell: cmd
      - run: echo ðŸ’¡ ${{ steps.foo.outputs.inputs-outputs }}
        shell: cmd
      - name: date-time
        run: echo ðŸ’¡ %date%-%time%
        shell: cmd

  powershell:
    name: Shell powershell
    continue-on-error: false
    strategy:
      max-parallel: 3
      matrix:
       os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - id: foo
        uses: milankomaj/shell-x@v0.2
        with:
          who-to-greet: '${{ github.actor }}'
          neofetch: 'true'
          shell: 'powershell'
          locale: 'sk_SK'
          timezone: 'Central Europe Standard Time'

      - run: echo ${{ steps.foo.outputs.random-number }}
        shell: powershell
      - run: echo ${{ steps.foo.outputs.inputs-outputs }}
        shell: powershell
      - run: |
         Get-TimeZone
         Get-Date -UFormat "%A %m/%d/%Y %R %Z"
        shell: powershell

  pwsh:
    name: Shell pwsh
    continue-on-error: false
    strategy:
      max-parallel: 3
      matrix:
       os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - id: foo
        uses: milankomaj/shell-x@v0.2
        with:
          who-to-greet: '${{ github.actor }}'
          neofetch: 'true'
          shell: 'pwsh'
          locale: 'sk_SK'
          timezone: 'Central Europe Standard Time'

      - run: echo ðŸ’¡ ${{ steps.foo.outputs.random-number }}
        shell: pwsh
      - run: echo ðŸ’¡ ${{ steps.foo.outputs.inputs-outputs }}
        shell: pwsh
      - run: Get-Date
        shell: pwsh