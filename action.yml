name: 'Hello World'
description: 'Greet someone'

inputs:
  actor:  # id of input
    description: 'Who to greet'
    required: false
    default: ${{ github.actor }}
  shell:  # id of input
    description: 'Use shell'
    required: false
    default: ""
  locale:  # id of input
    description: 'Use locale'
    required: false
    default: ""
  timezone:  # id of input
    description: 'Use timezone'
    required: false
    default: ""
  comand:  # id of input
    description: 'Use comand'
    required: false
    default: ""
  run:  # id of input
    description: 'run comand into shell-x'
    required: false
    default: false
    type: boolean

outputs:
  inputs-outputs:
    description: "inputs-outputs"
    value: "${{ steps.inputs-outputs.outputs.inputs-outputs }}"
  shell-outputs:
    description: "shell-outputs"
    value: "${{ steps.shell-outputs.outputs.shell-outputs }}"
  comand-outputs:
    description: "comand-outputs"
    value: "${{ steps.comand-outputs.outputs.comand-outputs }}"


runs:
  using: "composite"
  steps:

    - name: inputs exists
      id: exists
      if: inputs.shell == '' && inputs.locale == '' && inputs.timezone == '' && inputs.comand == ''
      run: |
       echo "::warning::Hey ${{ inputs.actor }}, add some inputs"
       exit
      shell: bash

    - name: inputs values
      id: values
      run: |
        echo "::group::Inputs"
        echo "Actor: ${{ inputs.actor }}"
        echo "Shell: ${{ inputs.shell }}"
        echo "Locale: ${{ inputs.locale }}"
        echo "Timezone: ${{ inputs.timezone }}"
        echo "Comand: ${{ inputs.comand }}"
        echo "::endgroup::"
      shell: bash

    - name: inputs-outputs
      id: inputs-outputs
      run: echo -n "inputs-outputs=${{runner.os}} - ${{inputs.shell}} - ${{inputs.locale}} - ${{inputs.timezone}}" >> $GITHUB_OUTPUT
      shell: bash

    - name: shell-outputs
      id: shell-outputs
      if: inputs.shell != ''
      run: echo -n "shell-outputs=${{inputs.shell}}" >> $GITHUB_OUTPUT
      shell: bash

    - name: comand-outputs
      id: comand-outputs
      if: inputs.comand != ''
      run: echo -n "comand-outputs=${{inputs.comand}}" >> $GITHUB_OUTPUT
      shell: bash

    - name: is-Linux
      id: is-Linux
      if: runner.os == 'Linux'  && inputs.locale != '' && inputs.timezone != '' || runner.os == 'Linux'  && inputs.locale != '' && inputs.timezone != '' && inputs.shell == 'pwsh' || runner.os == 'Linux'  && inputs.locale != '' && inputs.timezone != '' && inputs.shell == 'bash' || runner.os == 'Linux' && inputs.shell != ''  && inputs.timezone != '' && inputs.shell == 'pwsh' || runner.os == 'Linux'  && inputs.locale != '' && inputs.timezone != '' && inputs.shell == 'sh'
      run: |
       sudo locale-gen ${{ inputs.locale }}
       sudo update-locale LANG=${{ inputs.locale }}
       sudo timedatectl set-timezone ${{ inputs.timezone }}
       echo "LANG=$(echo ${{ inputs.locale }})" >> $GITHUB_ENV
      shell: ${{ inputs.shell }}

    - name: is-macOS
      id: is-macOS
      if: runner.os == 'macOS'  && inputs.locale != '' && inputs.timezone != '' || runner.os == 'macOS'  && inputs.locale != '' && inputs.timezone != '' && inputs.shell == 'sh' || runner.os == 'macOS'  && inputs.locale != '' && inputs.timezone != '' && inputs.shell == 'bash'
      run: |
       sudo su
       sudo systemsetup -settimezone ${{ inputs.timezone }}
       cd ~
       sudo sed -i -e 's/en_US.UTF-8/${{ inputs.locale }}/g' .bashrc
       exit
      shell: ${{ inputs.shell }}

    - name: is-Windows
      id: is-Windows
      if: runner.os == 'Windows' && inputs.shell != 'cmd'  && inputs.locale != '' && inputs.timezone != '' || runner.os == 'Windows' && inputs.shell != 'cmd'  && inputs.locale != '' && inputs.timezone != ''  && inputs.shell == 'powershell' || runner.os == 'Windows' && inputs.shell != 'cmd' && inputs.locale != '' && inputs.timezone != ''  && inputs.shell == 'pwsh'
      run: |
       Set-WinSystemLocale ${{ inputs.locale }}
       Set-WinSystemLocale -SystemLocale ${{ inputs.locale }}
       Set-Culture ${{ inputs.locale }}
       Set-Culture -CultureInfo ${{ inputs.locale }}
       Set-TimeZone -Id "${{ inputs.timezone }}"
      shell: ${{ inputs.shell }}

    - name: is-Windows-cmd
      id: is-Windows-cmd
      if: inputs.shell == 'cmd' && inputs.timezone != ''
      run: |
        tzutil /s "${{ inputs.timezone }}"
      shell: ${{ inputs.shell }}

    - name: is-custom-shell
      id: is-custom-shell
      if: inputs.shell == '' && inputs.comand != '' && inputs.shell != 'bash' && inputs.shell != 'sh' && inputs.shell != 'cmd' && inputs.shell != 'pwsh' && inputs.shell != 'powershell'
      shell: ${{ inputs.shell }}

    - name: is-run-true
      id: is-run-true
      if: inputs.run == 'true' && inputs.comand != '' && inputs.shell != ''
      run: |
        echo "::group::Run"
        echo "comand: ${{ inputs.comand }}"
        ${{ inputs.comand }}
        echo "::endgroup::"
      shell: ${{ inputs.shell }}
